---
- name: SDWAN Lab 3 - Policy and Template Analysis
  hosts: localhost
  gather_facts: no
  vars_files:
    - vars.yml

  tasks:
    - name: Authenticate with vManage
      uri:
        url: "{{ vmanage_url }}/j_security_check"
        method: POST
        body: "j_username={{ vmanage_username }}&j_password={{ vmanage_password }}"
        validate_certs: false
        headers:
          Content-Type: "application/x-www-form-urlencoded"
      register: login_response

    - name: Set session cookie
      set_fact:
        vmanage_cookie: "{{ login_response.cookies_string }}"

    - name: Get CSRF token
      uri:
        url: "{{ vmanage_url }}/dataservice/client/token"
        method: GET
        validate_certs: false
        return_content: yes
        headers:
          Cookie: "{{ vmanage_cookie }}"
      register: token_response

    - name: Set CSRF token
      set_fact:
        csrf_token: "{{ token_response.content }}"

    - name: Get centralized policies
      uri:
        url: "{{ vmanage_url }}/dataservice/template/policy/vedge"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
          Cookie: "{{ vmanage_cookie }}"
          X-XSRF-TOKEN: "{{ csrf_token }}"
      register: centralized_policies
      
    - name: Get device templates
      uri:
        url: "{{ vmanage_url }}/dataservice/template/device"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
          Cookie: "{{ vmanage_cookie }}"
          X-XSRF-TOKEN: "{{ csrf_token }}"
      register: device_templates
      
    - name: Get feature templates
      uri:
        url: "{{ vmanage_url }}/dataservice/template/feature"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
          Cookie: "{{ vmanage_cookie }}"
          X-XSRF-TOKEN: "{{ csrf_token }}"
      register: feature_templates
      
    - name: Get security policies
      uri:
        url: "{{ vmanage_url }}/dataservice/template/policy/definition/acl"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
          Cookie: "{{ vmanage_cookie }}"
          X-XSRF-TOKEN: "{{ csrf_token }}"
      register: security_policies
      ignore_errors: yes
      
    - name: Get QoS policies
      uri:
        url: "{{ vmanage_url }}/dataservice/template/policy/definition/qosmap"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
          Cookie: "{{ vmanage_cookie }}"
          X-XSRF-TOKEN: "{{ csrf_token }}"
      register: qos_policies
      ignore_errors: yes
      
    - name: Get application-aware routing policies
      uri:
        url: "{{ vmanage_url }}/dataservice/template/policy/definition/app-route"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
          Cookie: "{{ vmanage_cookie }}"
          X-XSRF-TOKEN: "{{ csrf_token }}"
      register: aar_policies
      ignore_errors: yes
      
    - name: Analyze policy counts
      set_fact:
        total_centralized_policies: "{{ centralized_policies.json.data | length }}"
        total_device_templates: "{{ device_templates.json.data | length }}"
        total_feature_templates: "{{ feature_templates.json.data | length }}"
        total_security_policies: "{{ security_policies.json.data | default([]) | length }}"
        total_qos_policies: "{{ qos_policies.json.data | default([]) | length }}"
        total_aar_policies: "{{ aar_policies.json.data | default([]) | length }}"
        
    - name: Display policy summary
      debug:
        msg: |
          === CATALYST WAN POLICY INVENTORY ===
          Centralized Policies: {{ total_centralized_policies }}
          Device Templates: {{ total_device_templates }}
          Feature Templates: {{ total_feature_templates }}
          Security Policies: {{ total_security_policies }}
          QoS Policies: {{ total_qos_policies }}
          App-Aware Routing: {{ total_aar_policies }}
          
    - name: Show centralized policy details
      debug:
        msg: "Policy: {{ item.policyName | default('Unnamed') }} (ID: {{ item.policyId | default('N/A') }}) - Type: {{ item.policyType | default('Unknown') }} - Active: {{ item.isPolicyActivated | default('Unknown') }}"
      loop: "{{ centralized_policies.json.data[:5] }}"
      when: centralized_policies.json.data is defined and centralized_policies.json.data | length > 0
      
    - name: Categorize device templates by type
      set_fact:
        vedge_templates: "{{ device_templates.json.data | selectattr('deviceType', 'equalto', 'vedge-cloud') | list }}"
        cedge_templates: "{{ device_templates.json.data | selectattr('deviceType', 'equalto', 'vedge-CSR-1000v') | list }}"
        
    - name: Display device template categories
      debug:
        msg: |
          === DEVICE TEMPLATE ANALYSIS ===
          vEdge Cloud Templates: {{ vedge_templates | length }}
          CSR1000v Templates: {{ cedge_templates | length }}
          
    - name: Show device template details
      debug:
        msg: "Template: {{ item.templateName | default('Unnamed') }} - Device: {{ item.deviceType | default('Unknown') }} - Attached: {{ item.devicesAttached | default(0) }} devices"
      loop: "{{ device_templates.json.data[:5] }}"
      when: device_templates.json.data is defined and device_templates.json.data | length > 0
      
    - name: Categorize feature templates by type
      set_fact:
        system_templates: "{{ feature_templates.json.data | selectattr('templateType', 'equalto', 'cisco_system') | list }}"
        interface_templates: "{{ feature_templates.json.data | selectattr('templateType', 'match', '.*interface.*') | list }}"
        routing_templates: "{{ feature_templates.json.data | selectattr('templateType', 'match', '.*(ospf|bgp|routing).*') | list }}"
        
    - name: Display feature template categories
      debug:
        msg: |
          === FEATURE TEMPLATE ANALYSIS ===
          System Templates: {{ system_templates | length }}
          Interface Templates: {{ interface_templates | length }}  
          Routing Templates: {{ routing_templates | length }}
          
    - name: Show feature template usage
      debug:
        msg: "Template: {{ item.templateName | default('Unnamed') }} ({{ item.templateType | default('Unknown') }}) - Used in {{ item.devicesAttached | default(0) }} devices"
      loop: "{{ feature_templates.json.data[:10] }}"
      when: feature_templates.json.data is defined and feature_templates.json.data | length > 0
      
    - name: Analyze template usage patterns
      set_fact:
        unused_templates: "{{ feature_templates.json.data | selectattr('devicesAttached', 'equalto', 0) | list }}"
        highly_used_templates: "{{ feature_templates.json.data | selectattr('devicesAttached', 'greaterthan', 5) | list }}"
        
    - name: Display template usage analysis
      debug:
        msg: |
          === TEMPLATE USAGE ANALYSIS ===
          Unused Templates: {{ unused_templates | length }}
          Highly Used (>5 devices): {{ highly_used_templates | length }}
          
    - name: Show unused templates
      debug:
        msg: "Unused: {{ item.templateName | default('Unnamed') }} ({{ item.templateType | default('Unknown') }})"
      loop: "{{ unused_templates[:5] }}"
      when: unused_templates is defined and unused_templates | length > 0
      
    - name: Show highly used templates
      debug:
        msg: "High Usage: {{ item.templateName | default('Unnamed') }} - {{ item.devicesAttached | default(0) }} devices"
      loop: "{{ highly_used_templates[:5] }}"
      when: highly_used_templates is defined and highly_used_templates | length > 0
      
    - name: Analyze security policy details
      debug:
        msg: "Security Policy: {{ item.name | default('Unnamed') }} - Type: {{ item.type | default('Unknown') }} - Rules: {{ item.sequences | default([]) | length }}"
      loop: "{{ security_policies.json.data[:3] }}"
      when: security_policies.json.data is defined and security_policies.json.data | length > 0
      
    - name: Show QoS policy details
      debug:
        msg: "QoS Policy: {{ item.name | default('Unnamed') }} - Classes: {{ item.definition | default({}) | length }}"
      loop: "{{ qos_policies.json.data[:3] }}"
      when: qos_policies.json.data is defined and qos_policies.json.data | length > 0
      
    - name: Create comprehensive policy report
      copy:
        content: |
          Catalyst WAN Policy and Template Analysis Report
          Generated: {{ ansible_date_time.iso8601 | default('Unknown time') }}
          vManage: {{ vmanage_url }}
          
          ========================================
          POLICY INVENTORY SUMMARY
          ========================================
          Centralized Policies: {{ total_centralized_policies }}
          Device Templates: {{ total_device_templates }}
          Feature Templates: {{ total_feature_templates }}
          Security Policies: {{ total_security_policies }}
          QoS Policies: {{ total_qos_policies }}
          App-Aware Routing Policies: {{ total_aar_policies }}
          
          ========================================
          CENTRALIZED POLICIES
          ========================================
          {% for policy in centralized_policies.json.data %}
          Policy Name: {{ policy.policyName | default('Unnamed') }}
          Policy ID: {{ policy.policyId | default('N/A') }}
          Type: {{ policy.policyType | default('Unknown') }}
          Activated: {{ policy.isPolicyActivated | default('Unknown') }}
          Description: {{ policy.policyDescription | default('No description') }}
          ---
          {% endfor %}
          
          ========================================
          DEVICE TEMPLATE ANALYSIS
          ========================================
          Total Templates: {{ total_device_templates }}
          vEdge Cloud Templates: {{ vedge_templates | length }}
          CSR1000v Templates: {{ cedge_templates | length }}
          
          Template Details:
          {% for template in device_templates.json.data %}
          - {{ template.templateName | default('Unnamed') }}
            Device Type: {{ template.deviceType | default('Unknown') }}
            Attached Devices: {{ template.devicesAttached | default(0) }}
            Last Modified: {{ template.lastUpdatedOn | default('Unknown') }}
          {% endfor %}
          
          ========================================
          FEATURE TEMPLATE ANALYSIS  
          ========================================
          Total Templates: {{ total_feature_templates }}
          System Templates: {{ system_templates | length }}
          Interface Templates: {{ interface_templates | length }}
          Routing Templates: {{ routing_templates | length }}
          
          Usage Statistics:
          - Unused Templates: {{ unused_templates | length }}
          - Highly Used Templates (>5 devices): {{ highly_used_templates | length }}
          
          {% if unused_templates | length > 0 %}
          Unused Templates (Cleanup Candidates):
          {% for template in unused_templates %}
          - {{ template.templateName | default('Unnamed') }} ({{ template.templateType | default('Unknown') }})
          {% endfor %}
          {% endif %}
          
          {% if highly_used_templates | length > 0 %}
          Highly Used Templates:
          {% for template in highly_used_templates %}
          - {{ template.templateName | default('Unnamed') }}: {{ template.devicesAttached | default(0) }} devices
          {% endfor %}
          {% endif %}
          
          {% if security_policies.json.data is defined and security_policies.json.data | length > 0 %}
          ========================================
          SECURITY POLICIES
          ========================================
          {% for policy in security_policies.json.data %}
          Policy: {{ policy.name | default('Unnamed') }}
          Type: {{ policy.type | default('Unknown') }}
          Rules: {{ policy.sequences | default([]) | length }}
          ---
          {% endfor %}
          {% endif %}
          
          {% if qos_policies.json.data is defined and qos_policies.json.data | length > 0 %}
          ========================================
          QOS POLICIES
          ========================================
          {% for policy in qos_policies.json.data %}
          Policy: {{ policy.name | default('Unnamed') }}
          Description: {{ policy.description | default('No description') }}
          Classes Defined: {{ policy.definition | default({}) | length }}
          ---
          {% endfor %}
          {% endif %}
          
          ========================================
          RECOMMENDATIONS
          ========================================
          {% if unused_templates | length > 0 %}
          - Consider removing {{ unused_templates | length }} unused feature templates to reduce clutter
          {% endif %}
          {% if total_centralized_policies == 0 %}
          - No centralized policies found - consider implementing centralized policy management
          {% endif %}
          {% if total_security_policies == 0 %}
          - No security policies detected - implement access control policies for better security
          {% endif %}
          - Regular policy review and cleanup recommended
          - Document template dependencies before making changes
          
        dest: "./SDWAN-policy-analysis-{{ ansible_date_time.epoch | default('timestamp') }}.txt"
      delegate_to: localhost
      
    - name: Display report location
      debug:
        msg: "Policy analysis report saved to: ./SDWAN-policy-analysis-{{ ansible_date_time.epoch | default('timestamp') }}.txt"