---
- name: SDWAN Lab 4 - Network Performance and Statistics Monitoring
  hosts: sdwan
  connection: httpapi
  gather_facts: yes
  
  vars:
    ansible_network_os: cisco.sdwan.sdwan
    vmanage_host: "{{ inventory_hostname }}"
    base_url: "https://{{ vmanage_host }}/dataservice"
    
  tasks:
    - name: Get interface statistics
      uri:
        url: "{{ base_url }}/device/interface/stats"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: interface_stats
      
    - name: Get application-aware routing statistics
      uri:
        url: "{{ base_url }}/device/app-route/statistics"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: aar_stats
      ignore_errors: yes
      
    - name: Get tunnel interface statistics
      uri:
        url: "{{ base_url }}/device/tunnel/interface"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: tunnel_interface_stats
      ignore_errors: yes
      
    - name: Get DPI (Deep Packet Inspection) statistics
      uri:
        url: "{{ base_url }}/device/dpi/flows"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: dpi_stats
      ignore_errors: yes
      
    - name: Get system performance metrics
      uri:
        url: "{{ base_url }}/device/system/info"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: system_info
      ignore_errors: yes
      
    - name: Analyze interface performance
      set_fact:
        total_interfaces: "{{ interface_stats.json.data | length }}"
        high_util_interfaces: "{{ interface_stats.json.data | selectattr('rx-utilization', 'defined') | selectattr('rx-utilization', 'greaterthan', 80) | list }}"
        avg_utilization: "{{ (interface_stats.json.data | selectattr('rx-utilization', 'defined') | map(attribute='rx-utilization') | map('float') | sum / interface_stats.json.data | selectattr('rx-utilization', 'defined') | length) | round(2) }}"
      when: interface_stats.json.data is defined and interface_stats.json.data | length > 0
      
    - name: Display interface performance summary
      debug:
        msg: |
          === INTERFACE PERFORMANCE SUMMARY ===
          Total Interfaces Monitored: {{ total_interfaces | default('N/A') }}
          Average Utilization: {{ avg_utilization | default('N/A') }}%
          High Utilization Interfaces (>80%): {{ high_util_interfaces | default([]) | length }}
          
    - name: Show top utilized interfaces
      debug:
        msg: "Interface {{ item.interface | default('Unknown') }} on {{ item['system-ip'] | default('Unknown') }}: RX {{ item['rx-utilization'] | default('N/A') }}% TX {{ item['tx-utilization'] | default('N/A') }}%"
      loop: "{{ interface_stats.json.data | selectattr('rx-utilization', 'defined') | sort(attribute='rx-utilization') | reverse | list [:5] }}"
      when: interface_stats.json.data is defined and interface_stats.json.data | length > 0
      
    - name: Analyze bandwidth consumption
      set_fact:
        total_rx_bytes: "{{ interface_stats.json.data | selectattr('rx-octets', 'defined') | map(attribute='rx-octets') | map('int') | sum }}"
        total_tx_bytes: "{{ interface_stats.json.data | selectattr('tx-octets', 'defined') | map(attribute='tx-octets') | map('int') | sum }}"
      when: interface_stats.json.data is defined and interface_stats.json.data | length > 0
      
    - name: Display bandwidth statistics
      debug:
        msg: |
          === BANDWIDTH CONSUMPTION ===
          Total RX Bytes: {{ (total_rx_bytes | default(0) | int / 1024 / 1024) | round(2) }} MB
          Total TX Bytes: {{ (total_tx_bytes | default(0) | int / 1024 / 1024) | round(2) }} MB
          
    - name: Show interface error statistics
      debug:
        msg: "Errors on {{ item.interface | default('Unknown') }} ({{ item['system-ip'] | default('Unknown') }}): RX Errors {{ item['rx-errors'] | default(0) }}, TX Errors {{ item['tx-errors'] | default(0) }}"
      loop: "{{ interface_stats.json.data | selectattr('rx-errors', 'defined') | selectattr('rx-errors', 'greaterthan', 0) | list [:5] }}"
      when: interface_stats.json.data is defined and interface_stats.json.data | length > 0
      
    - name: Analyze application performance
      set_fact:
        aar_app_count: "{{ aar_stats.json.data | default([]) | length }}"
      when: aar_stats.json.data is defined
      
    - name: Display application-aware routing summary
      debug:
        msg: |
          === APPLICATION-AWARE ROUTING PERFORMANCE ===
          Applications Monitored: {{ aar_app_count | default('N/A') }}
      when: aar_stats.json.data is defined
      
    - name: Show top applications by traffic
      debug:
        msg: "App: {{ item.name | default('Unknown') }} - Bytes: {{ item.octets | default('N/A') }}, Latency: {{ item.latency | default('N/A') }}ms"
      loop: "{{ aar_stats.json.data | default([]) [:5] }}"
      when: aar_stats.json.data is defined and aar_stats.json.data | length > 0
      
    - name: Analyze tunnel performance
      set_fact:
        total_tunnels: "{{ tunnel_interface_stats.json.data | default([]) | length }}"
        active_tunnels: "{{ tunnel_interface_stats.json.data | default([]) | selectattr('status', 'equalto', 'Up') | list | length }}"
      when: tunnel_interface_stats.json.data is defined
      
    - name: Display tunnel performance summary
      debug:
        msg: |
          === TUNNEL PERFORMANCE SUMMARY ===
          Total Tunnels: {{ total_tunnels | default('N/A') }}
          Active Tunnels: {{ active_tunnels | default('N/A') }}
          Tunnel Health: {{ ((active_tunnels | default(0) | int * 100) / (total_tunnels | default(1) | int)) | round(1) }}%
          
    - name: Show tunnel details
      debug:
        msg: "Tunnel {{ item['tunnel-id'] | default('Unknown') }}: {{ item['local-ip'] | default('N/A') }} -> {{ item['remote-ip'] | default('N/A') }} ({{ item.status | default('Unknown') }})"
      loop: "{{ tunnel_interface_stats.json.data | default([]) [:5] }}"
      when: tunnel_interface_stats.json.data is defined and tunnel_interface_stats.json.data | length > 0
      
    - name: Analyze DPI application statistics
      set_fact:
        dpi_app_count: "{{ dpi_stats.json.data | default([]) | length }}"
        top_applications: "{{ dpi_stats.json.data | default([]) | sort(attribute='octets') | reverse | list [:5] }}"
      when: dpi_stats.json.data is defined
      
    - name: Display DPI application summary
      debug:
        msg: |
          === DEEP PACKET INSPECTION SUMMARY ===
          Applications Detected: {{ dpi_app_count | default('N/A') }}
      when: dpi_stats.json.data is defined
      
    - name: Show top applications by bandwidth
      debug:
        msg: "Application: {{ item.application | default('Unknown') }} - Bandwidth: {{ (item.octets | default(0) | int / 1024 / 1024) | round(2) }} MB"
      loop: "{{ top_applications | default([]) }}"
      when: top_applications is defined and top_applications | length > 0
      
    - name: Calculate overall network health score
      set_fact:
        interface_health: "{{ 100 - (high_util_interfaces | default([]) | length * 100 / total_interfaces | default(1) | int) }}"
        tunnel_health_pct: "{{ ((active_tunnels | default(0) | int * 100) / (total_tunnels | default(1) | int)) | round(1) }}"
        overall_health: "{{ ((interface_health | float + tunnel_health_pct | float) / 2) | round(1) }}"
      when: 
        - total_interfaces is defined
        - total_tunnels is defined
        
    - name: Display network performance summary
      debug:
        msg: |
          ====================================
          SD-WAN NETWORK PERFORMANCE SUMMARY
          ====================================
          Overall Health Score: {{ overall_health | default('N/A') }}%
          
          Interface Performance: {{ interface_health | default('N/A') }}%
          - Average Utilization: {{ avg_utilization | default('N/A') }}%
          - High Utilization Count: {{ high_util_interfaces | default([]) | length }}
          
          Tunnel Performance: {{ tunnel_health_pct | default('N/A') }}%
          - Active Tunnels: {{ active_tunnels | default('N/A') }}/{{ total_tunnels | default('N/A') }}
          
          Application Monitoring:
          - AAR Applications: {{ aar_app_count | default('N/A') }}
          - DPI Applications: {{ dpi_app_count | default('N/A') }}
          
          Status: {{ 'OPTIMAL' if (overall_health | default(0) | float) > 90 else 'GOOD' if (overall_health | default(0) | float) > 75 else 'WARNING' if (overall_health | default(0) | float) > 60 else 'CRITICAL' }}
          
    - name: Create performance monitoring report
      copy:
        content: |
          SD-WAN Network Performance Monitoring Report
          Generated: {{ ansible_date_time.iso8601 | default('Unknown time') }}
          vManage: {{ vmanage_host }}
          
          ========================================
          EXECUTIVE SUMMARY
          ========================================
          Overall Network Health: {{ overall_health | default('N/A') }}%
          Performance Status: {{ 'OPTIMAL' if (overall_health | default(0) | float) > 90 else 'GOOD' if (overall_health | default(0) | float) > 75 else 'WARNING' if (overall_health | default(0) | float) > 60 else 'CRITICAL' }}
          
          ========================================
          INTERFACE PERFORMANCE
          ========================================
          Total Interfaces Monitored: {{ total_interfaces | default('N/A') }}
          Average Utilization: {{ avg_utilization | default('N/A') }}%
          High Utilization Interfaces (>80%): {{ high_util_interfaces | default([]) | length }}
          Total RX Traffic: {{ (total_rx_bytes | default(0) | int / 1024 / 1024 / 1024) | round(2) }} GB
          Total TX Traffic: {{ (total_tx_bytes | default(0) | int / 1024 / 1024 / 1024) | round(2) }} GB
          
          Top Utilized Interfaces:
          {% for interface in interface_stats.json.data | default([]) | selectattr('rx-utilization', 'defined') | sort(attribute='rx-utilization') | reverse | list [:5] %}
          - {{ interface.interface | default('Unknown') }} ({{ interface['system-ip'] | default('Unknown') }}): RX {{ interface['rx-utilization'] | default('N/A') }}%
          {% endfor %}
          
          {% if high_util_interfaces | default([]) | length > 0 %}
          High Utilization Alerts:
          {% for interface in high_util_interfaces %}
          - ALERT: {{ interface.interface | default('Unknown') }} on {{ interface['system-ip'] | default('Unknown') }} at {{ interface['rx-utilization'] | default('N/A') }}%
          {% endfor %}
          {% endif %}
          
          ========================================
          TUNNEL PERFORMANCE
          ========================================
          Total Tunnels: {{ total_tunnels | default('N/A') }}
          Active Tunnels: {{ active_tunnels | default('N/A') }}
          Tunnel Health: {{ tunnel_health_pct | default('N/A') }}%
          
          Tunnel Details:
          {% for tunnel in tunnel_interface_stats.json.data | default([]) %}
          - Tunnel {{ tunnel['tunnel-id'] | default('Unknown') }}: {{ tunnel.status | default('Unknown') }}
            Local: {{ tunnel['local-ip'] | default('N/A') }} Remote: {{ tunnel['remote-ip'] | default('N/A') }}
          {% endfor %}
          
          {% if aar_stats.json.data is defined and aar_stats.json.data | length > 0 %}
          ========================================
          APPLICATION-AWARE ROUTING
          ========================================
          Applications Monitored: {{ aar_app_count | default('N/A') }}
          
          Application Performance:
          {% for app in aar_stats.json.data[:10] %}
          - {{ app.name | default('Unknown') }}: {{ app.latency | default('N/A') }}ms latency, {{ app.octets | default('N/A') }} bytes
          {% endfor %}
          {% endif %}
          
          {% if top_applications is defined and top_applications | length > 0 %}
          ========================================
          TOP APPLICATIONS BY BANDWIDTH
          ========================================
          {% for app in top_applications %}
          {{ loop.index }}. {{ app.application | default('Unknown') }}: {{ (app.octets | default(0) | int / 1024 / 1024) | round(2) }} MB
          {% endfor %}
          {% endif %}
          
          ========================================
          RECOMMENDATIONS
          ========================================
          {% if high_util_interfaces | default([]) | length > 0 %}
          - CRITICAL: {{ high_util_interfaces | length }} interfaces showing high utilization (>80%)
          - Consider upgrading bandwidth or implementing traffic shaping
          {% endif %}
          {% if tunnel_health_pct | default(100) | float < 95 %}
          - WARNING: Some tunnels are down, investigate connectivity issues
          {% endif %}
          {% if avg_utilization | default(0) | float > 70 %}
          - WARNING: Average network utilization is high ({{ avg_utilization }}%)
          {% endif %}
          {% if overall_health | default(100) | float > 90 %}
          - Network performance is optimal, continue monitoring
          {% endif %}
          - Implement proactive monitoring and alerting for performance thresholds
          - Regular performance baseline reviews recommended
          
        dest: "./SDWAN-performance-report-{{ ansible_date_time.epoch | default('timestamp') }}.txt"
      delegate_to: localhost
      
    - name: Display report location
      debug:
        msg: "Performance monitoring report saved to: ./SDWAN-performance-report-{{ ansible_date_time.epoch | default('timestamp') }}.txt"