---
- name: Lab 10 - Configuration Validation and Compliance
  hosts: csr
  connection: network_cli
  gather_facts: no
  
  vars:
    ansible_network_os: ios
    compliance_dir: \"./compliance-reports\"\n    timestamp: \"{{ ansible_date_time.year }}{{ ansible_date_time.month }}{{ ansible_date_time.day }}-{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}{{ ansible_date_time.second }}\"\n    \n    # Compliance Standards\n    required_services:\n      - ntp\n      - logging\n    \n    security_requirements:\n      - enable_secret\n      - aaa_new_model\n      - login_authentication\n      \n    interface_requirements:\n      - description_present\n      - no_shutdown\n      \n  tasks:\n    - name: Gather timestamp facts\n      setup:\n        filter: ansible_date_time\n      delegate_to: localhost\n      \n    - name: Create compliance reports directory\n      file:\n        path: \"{{ compliance_dir }}\"\n        state: directory\n      delegate_to: localhost\n      \n    - name: Gather device facts for compliance baseline\n      cisco.ios.ios_facts:\n        gather_subset:\n          - default\n          - hardware\n          - interfaces\n      register: device_facts\n      \n    - name: Validate interface configuration compliance\n      cisco.ios.ios_command:\n        commands:\n          - show ip interface brief\n          - show interfaces description\n          - show running-config | section interface\n      register: interface_validation\n      \n    - name: Check security configuration compliance\n      cisco.ios.ios_command:\n        commands:\n          - show running-config | include enable secret\n          - show running-config | include aaa\n          - show running-config | include username\n          - show running-config | section line\n      register: security_validation\n      \n    - name: Verify routing protocol compliance\n      cisco.ios.ios_command:\n        commands:\n          - show ip route summary\n          - show ip protocols\n          - show running-config | section router\n      register: routing_validation\n      \n    - name: Check management services compliance\n      cisco.ios.ios_command:\n        commands:\n          - show ntp status\n          - show logging\n          - show clock detail\n      register: services_validation\n      \n    - name: Validate system resource compliance\n      cisco.ios.ios_command:\n        commands:\n          - show processes cpu sorted 5min\n          - show memory\n          - show version\n      register: system_validation\n      \n    - name: Check access control compliance\n      cisco.ios.ios_command:\n        commands:\n          - show access-lists\n          - show running-config | include access-list\n      register: acl_validation\n      \n    - name: Analyze interface compliance\n      set_fact:\n        interface_compliance:\n          total_interfaces: \"{{ ansible_net_interfaces | length }}\"\n          configured_interfaces: \"{{ ansible_net_interfaces | dict2items | selectattr('value.ipv4', 'defined') | list | length }}\"\n          up_interfaces: \"{{ ansible_net_interfaces | dict2items | selectattr('value.lineprotocol', 'equalto', 'up') | list | length }}\"\n          \n    - name: Analyze security compliance\n      set_fact:\n        security_compliance:\n          enable_secret_set: \"{{ 'enable secret' in security_validation.stdout[0] }}\"\n          aaa_enabled: \"{{ 'aaa new-model' in security_validation.stdout[1] }}\"\n          users_configured: \"{{ security_validation.stdout[2].split('\n') | select('match', '^username') | list | length }}\"\n          \n    - name: Generate compliance score\n      set_fact:\n        compliance_score:\n          interfaces: \"{{ ((interface_compliance.up_interfaces | int) * 100 / (interface_compliance.total_interfaces | int)) | round(1) }}\"\n          security: \"{{ ((security_compliance.enable_secret_set | bool | int + security_compliance.aaa_enabled | bool | int) * 50) | round(1) }}\"\n          services: \"{{ ('synchronized' in services_validation.stdout[0]) | ternary(100, 0) }}\"\n          \n    - name: Calculate overall compliance score\n      set_fact:\n        overall_compliance: \"{{ ((compliance_score.interfaces | float + compliance_score.security | float + compliance_score.services | float) / 3) | round(1) }}\"\n        \n    - name: Display compliance summary\n      debug:\n        msg: |\n          === COMPLIANCE VALIDATION SUMMARY ===\n          Device: {{ inventory_hostname }}\n          Overall Compliance Score: {{ overall_compliance }}%\n          \n          Interface Compliance: {{ compliance_score.interfaces }}%\n          - Total Interfaces: {{ interface_compliance.total_interfaces }}\n          - Configured Interfaces: {{ interface_compliance.configured_interfaces }}\n          - Operational Interfaces: {{ interface_compliance.up_interfaces }}\n          \n          Security Compliance: {{ compliance_score.security }}%\n          - Enable Secret: {{ security_compliance.enable_secret_set | ternary('✓', '✗') }}\n          - AAA Enabled: {{ security_compliance.aaa_enabled | ternary('✓', '✗') }}\n          - Users Configured: {{ security_compliance.users_configured }}\n          \n          Services Compliance: {{ compliance_score.services }}%\n          - NTP Synchronized: {{ ('synchronized' in services_validation.stdout[0]) | ternary('✓', '✗') }}\n          \n    - name: Create detailed compliance report\n      copy:\n        content: |\n          NETWORK DEVICE COMPLIANCE REPORT\n          Generated: {{ ansible_date_time.iso8601 }}\n          Device: {{ inventory_hostname }} ({{ ansible_net_hostname }})\n          Model: {{ ansible_net_model }} | IOS: {{ ansible_net_version }}\n          \n          ==============================================\n          OVERALL COMPLIANCE SCORE: {{ overall_compliance }}%\n          ==============================================\n          \n          INTERFACE COMPLIANCE ({{ compliance_score.interfaces }}%)\n          --------------------------------------------\n          {% for interface, details in ansible_net_interfaces.items() %}\n          {{ interface }}:\n            - IP Address: {{ details.ipv4[0].address | default('Not configured') if details.ipv4 is defined else 'Not configured' }}\n            - Status: {{ details.operstatus | default('Unknown') }}\n            - Protocol: {{ details.lineprotocol | default('Unknown') }}\n            - Description: {{ details.description | default('Missing description') }}\n          {% endfor %}\n          \n          SECURITY COMPLIANCE ({{ compliance_score.security }}%)\n          --------------------------------------------\n          Enable Secret: {{ security_compliance.enable_secret_set | ternary('CONFIGURED', 'MISSING') }}\n          AAA Services: {{ security_compliance.aaa_enabled | ternary('ENABLED', 'DISABLED') }}\n          User Accounts: {{ security_compliance.users_configured }} configured\n          \n          Security Configuration:\n          {{ security_validation.stdout | join('\n') }}\n          \n          SERVICES COMPLIANCE ({{ compliance_score.services }}%)\n          --------------------------------------------\n          NTP Status:\n          {{ services_validation.stdout[0] }}\n          \n          SYSTEM RESOURCES\n          --------------------------------------------\n          CPU Utilization:\n          {{ system_validation.stdout[0] }}\n          \n          Memory Status:\n          {{ system_validation.stdout[1] }}\n          \n          ACCESS CONTROL\n          --------------------------------------------\n          {{ acl_validation.stdout[0] if acl_validation.stdout[0] != '' else 'No access-lists configured' }}\n          \n          ROUTING SUMMARY\n          --------------------------------------------\n          {{ routing_validation.stdout[0] }}\n          \n          RECOMMENDATIONS\n          --------------------------------------------\n          {% if overall_compliance | float < 90 %}\n          - Overall compliance below 90% - review configurations\n          {% endif %}\n          {% if compliance_score.interfaces | float < 100 %}\n          - Some interfaces are down or misconfigured\n          {% endif %}\n          {% if not security_compliance.enable_secret_set %}\n          - Configure enable secret for privileged access\n          {% endif %}\n          {% if not security_compliance.aaa_enabled %}\n          - Enable AAA services for enhanced security\n          {% endif %}\n          {% if 'synchronized' not in services_validation.stdout[0] %}\n          - NTP synchronization issues detected\n          {% endif %}\n          \n          === END OF REPORT ===\n        dest: \"{{ compliance_dir }}/{{ inventory_hostname }}-compliance-{{ timestamp }}.txt\"\n      delegate_to: localhost\n      \n    - name: Create compliance summary CSV\n      copy:\n        content: |\n          Device,Hostname,Model,IOS_Version,Overall_Score,Interface_Score,Security_Score,Services_Score,Timestamp\n          {{ inventory_hostname }},{{ ansible_net_hostname }},{{ ansible_net_model }},{{ ansible_net_version }},{{ overall_compliance }},{{ compliance_score.interfaces }},{{ compliance_score.security }},{{ compliance_score.services }},{{ ansible_date_time.iso8601 }}\n        dest: \"{{ compliance_dir }}/compliance-summary-{{ timestamp }}.csv\"\n      delegate_to: localhost\n      \n    - name: Display compliance report location\n      debug:\n        msg: \"Detailed compliance report saved to: {{ compliance_dir }}/{{ inventory_hostname }}-compliance-{{ timestamp }}.txt\"\n        \n    - name: Check for critical compliance failures\n      fail:\n        msg: \"CRITICAL: Device compliance score ({{ overall_compliance }}%) is below acceptable threshold (75%)\"\n      when: overall_compliance | float < 75\n      ignore_errors: yes\n      \n    - name: Configuration drift detection\n      cisco.ios.ios_command:\n        commands:\n          - show archive config differences nvram:startup-config system:running-config\n      register: config_drift\n      ignore_errors: yes\n      \n    - name: Display configuration drift status\n      debug:\n        msg: \"Configuration Drift: {{ 'DETECTED' if config_drift.stdout[0] != '' else 'NO DRIFT' }}\"\n      when: config_drift is defined\n      \n    - name: Lab completion summary\n      debug:\n        msg: |\n          🎉 CONGRATULATIONS! 🎉\n          \n          You have successfully completed all 10 Ansible + Cisco CSR1000V labs!\n          \n          Lab Series Summary:\n          ✓ Lab 1: Basic Connectivity Test\n          ✓ Lab 2: Interface Configuration  \n          ✓ Lab 3: OSPF Routing Setup\n          ✓ Lab 4: Access Control Lists (ACLs)\n          ✓ Lab 5: VLANs and Subinterfaces\n          ✓ Lab 6: Static and Default Routing\n          ✓ Lab 7: NTP and Logging Configuration\n          ✓ Lab 8: User Management and AAA\n          ✓ Lab 9: Configuration Backup and Restore\n          ✓ Lab 10: Configuration Validation and Compliance\n          \n          Final Compliance Score: {{ overall_compliance }}%\n          \n          You now have comprehensive experience with:\n          - Network automation using Ansible\n          - Cisco IOS configuration management\n          - Both CLI and playbook approaches\n          - Network validation and compliance\n          \n          Keep practicing and exploring advanced automation scenarios!"