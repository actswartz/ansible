---
- name: SDWAN Lab 1 - Basic SD-WAN Connectivity and Device Discovery
  hosts: sdwan
  connection: httpapi
  gather_facts: no
  
  vars:
    ansible_network_os: cisco.sdwan.sdwan
    
  tasks:
    - name: Test vManage API connectivity
      cisco.sdwan.device_info:
        device_category: controllers
      register: controllers_info
      
    - name: Display vManage connectivity status
      debug:
        msg: "Successfully connected to vManage API. Found {{ controllers_info.devices | length }} controllers."
        
    - name: Discover all SD-WAN devices
      cisco.sdwan.device_info:
      register: all_devices
      
    - name: Categorize devices by type
      set_fact:
        vmanage_devices: "{{ all_devices.devices | selectattr('device_type', 'equalto', 'vmanage') | list }}"
        vsmart_devices: "{{ all_devices.devices | selectattr('device_type', 'equalto', 'vsmart') | list }}"
        vbond_devices: "{{ all_devices.devices | selectattr('device_type', 'equalto', 'vbond') | list }}"
        vedge_devices: "{{ all_devices.devices | selectattr('device_type', 'match', '.*edge.*') | list }}"
        
    - name: Display device summary
      debug:
        msg: "Found {{ all_devices.devices | length }} total devices: {{ vmanage_devices | length }} vManage, {{ vsmart_devices | length }} vSmart, {{ vbond_devices | length }} vBond, {{ vedge_devices | length }} vEdge"
        
    - name: Display vManage controllers
      debug:
        msg: "vManage Controllers:"
      when: vmanage_devices | length > 0
      
    - name: Show vManage details
      debug:
        msg: "  - {{ item.hostname | default('Unknown') }} ({{ item.system_ip | default('No IP') }}) - Status: {{ item.status | default('Unknown') }}"
      loop: "{{ vmanage_devices }}"
      when: vmanage_devices | length > 0
      
    - name: Display vSmart controllers
      debug:
        msg: "vSmart Controllers:"
      when: vsmart_devices | length > 0
      
    - name: Show vSmart details
      debug:
        msg: "  - {{ item.hostname | default('Unknown') }} ({{ item.system_ip | default('No IP') }}) - Status: {{ item.status | default('Unknown') }}"
      loop: "{{ vsmart_devices }}"
      when: vsmart_devices | length > 0
      
    - name: Display vBond orchestrators
      debug:
        msg: "vBond Orchestrators:"
      when: vbond_devices | length > 0
      
    - name: Show vBond details
      debug:
        msg: "  - {{ item.hostname | default('Unknown') }} ({{ item.system_ip | default('No IP') }}) - Status: {{ item.status | default('Unknown') }}"
      loop: "{{ vbond_devices }}"
      when: vbond_devices | length > 0
      
    - name: Display vEdge routers
      debug:
        msg: "vEdge Routers:"
      when: vedge_devices | length > 0
      
    - name: Show vEdge details (first 10)
      debug:
        msg: "  - {{ item.hostname | default('Unknown') }} ({{ item.system_ip | default('No IP') }}) - Site: {{ item.site_id | default('N/A') }} - Status: {{ item.status | default('Unknown') }}"
      loop: "{{ vedge_devices[:10] }}"
      when: vedge_devices | length > 0
      
    - name: Show additional vEdge count
      debug:
        msg: "  ... and {{ vedge_devices | length - 10 }} more vEdge devices"
      when: vedge_devices | length > 10
      
    - name: Get device operational status
      cisco.sdwan.device_info:
        device_category: vedges
      register: vedge_status
      
    - name: Analyze device health
      set_fact:
        healthy_devices: "{{ vedge_status.devices | selectattr('status', 'equalto', 'normal') | list }}"
        unreachable_devices: "{{ vedge_status.devices | selectattr('status', 'equalto', 'unreachable') | list }}"
        
    - name: Display device health summary
      debug:
        msg: "Device Health: {{ healthy_devices | length }} healthy, {{ unreachable_devices | length }} unreachable out of {{ vedge_status.devices | length }} total vEdge devices"
        
    - name: Show unreachable devices
      debug:
        msg: "Unreachable devices: {{ item.hostname | default('Unknown') }} ({{ item.system_ip | default('No IP') }})"
      loop: "{{ unreachable_devices }}"
      when: unreachable_devices | length > 0
      
    - name: Create device inventory summary
      copy:
        content: |
          SD-WAN Fabric Device Inventory
          Generated: {{ ansible_date_time.iso8601 | default('Unknown time') }}
          vManage URL: https://sandbox-sdwan-2.cisco.com
          
          DEVICE SUMMARY
          ==============
          Total Devices: {{ all_devices.devices | length }}
          - vManage Controllers: {{ vmanage_devices | length }}
          - vSmart Controllers: {{ vsmart_devices | length }}
          - vBond Orchestrators: {{ vbond_devices | length }}
          - vEdge Routers: {{ vedge_devices | length }}
          
          DEVICE HEALTH
          =============
          Healthy vEdges: {{ healthy_devices | length }}
          Unreachable vEdges: {{ unreachable_devices | length }}
          
          DETAILED DEVICE LIST
          ===================
          {% for device in all_devices.devices %}
          {{ device.hostname | default('Unknown') }}:
            Type: {{ device.device_type | default('Unknown') }}
            System IP: {{ device.system_ip | default('Not assigned') }}
            Site ID: {{ device.site_id | default('N/A') }}
            Status: {{ device.status | default('Unknown') }}
            Model: {{ device.device_model | default('Unknown') }}
            Version: {{ device.version | default('Unknown') }}
          
          {% endfor %}
        dest: "./SDWAN-device-inventory-{{ ansible_date_time.epoch | default('timestamp') }}.txt"
      delegate_to: localhost
      
    - name: Display inventory file location
      debug:
        msg: "Device inventory saved to: ./SDWAN-device-inventory-{{ ansible_date_time.epoch | default('timestamp') }}.txt"