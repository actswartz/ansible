---
- name: SDWAN Lab 2 - Catalyst WAN Fabric Status and Health Monitoring
  hosts: catalyst_wan
  connection: httpapi
  gather_facts: yes
  
  vars:
    ansible_network_os: cisco.catalystwan
    vmanage_host: "{{ inventory_hostname }}"
    base_url: "https://{{ vmanage_host }}/dataservice"
    
  tasks:
    - name: Check control plane connections
      uri:
        url: "{{ base_url }}/device/control/connections"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: control_connections
      
    - name: Monitor BFD sessions
      uri:
        url: "{{ base_url }}/device/bfd/sessions"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: bfd_sessions
      
    - name: Check OMP peer relationships
      uri:
        url: "{{ base_url }}/device/omp/peers"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: omp_peers
      
    - name: Monitor IPsec tunnel status
      uri:
        url: "{{ base_url }}/device/tunnel/statistics"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: tunnel_stats
      ignore_errors: yes
      
    - name: Get device health overview
      uri:
        url: "{{ base_url }}/device/health/overview"
        method: GET
        validate_certs: false
        headers:
          Content-Type: "application/json"
      register: health_overview
      ignore_errors: yes
      
    - name: Analyze control plane health
      set_fact:
        total_control_connections: "{{ control_connections.json.data | length }}"
        up_control_connections: "{{ control_connections.json.data | selectattr('state', 'equalto', 'up') | list | length }}"
        down_control_connections: "{{ control_connections.json.data | selectattr('state', 'equalto', 'down') | list | length }}"
      when: control_connections.json.data is defined
      
    - name: Analyze BFD session health
      set_fact:
        total_bfd_sessions: "{{ bfd_sessions.json.data | length }}"
        up_bfd_sessions: "{{ bfd_sessions.json.data | selectattr('state', 'equalto', 'up') | list | length }}"
        down_bfd_sessions: "{{ bfd_sessions.json.data | selectattr('state', 'equalto', 'down') | list | length }}"
      when: bfd_sessions.json.data is defined
      
    - name: Analyze OMP peer health
      set_fact:
        total_omp_peers: "{{ omp_peers.json.data | length }}"
        established_omp_peers: "{{ omp_peers.json.data | selectattr('state', 'equalto', 'up') | list | length }}"
      when: omp_peers.json.data is defined
      
    - name: Display control plane status
      debug:
        msg: |
          === CONTROL PLANE STATUS ===
          Total Control Connections: {{ total_control_connections | default('N/A') }}
          UP Connections: {{ up_control_connections | default('N/A') }}
          DOWN Connections: {{ down_control_connections | default('N/A') }}
          Health: {{ ((up_control_connections | default(0) | int) * 100 / (total_control_connections | default(1) | int)) | round(1) }}%
          
    - name: Display BFD session status
      debug:
        msg: |
          === BFD SESSION STATUS ===
          Total BFD Sessions: {{ total_bfd_sessions | default('N/A') }}
          UP Sessions: {{ up_bfd_sessions | default('N/A') }}
          DOWN Sessions: {{ down_bfd_sessions | default('N/A') }}
          Health: {{ ((up_bfd_sessions | default(0) | int) * 100 / (total_bfd_sessions | default(1) | int)) | round(1) }}%
          
    - name: Display OMP peer status
      debug:
        msg: |
          === OMP PEER STATUS ===
          Total OMP Peers: {{ total_omp_peers | default('N/A') }}
          Established Peers: {{ established_omp_peers | default('N/A') }}
          Health: {{ ((established_omp_peers | default(0) | int) * 100 / (total_omp_peers | default(1) | int)) | round(1) }}%
          
    - name: Show control connection details
      debug:
        msg: "{{ item['system-ip'] | default('Unknown IP') }} (Site {{ item['site-id'] | default('N/A') }}): {{ item.state | default('Unknown') }} to {{ item['peer-type'] | default('Unknown peer') }}"
      loop: "{{ control_connections.json.data[:10] }}"
      when: control_connections.json.data is defined and control_connections.json.data | length > 0
      
    - name: Show BFD session details
      debug:
        msg: "{{ item['system-ip'] | default('Unknown IP') }} -> {{ item['peer-ip'] | default('Unknown peer') }}: {{ item.state | default('Unknown state') }} ({{ item['transitions'] | default('0') }} transitions)"
      loop: "{{ bfd_sessions.json.data[:5] }}"
      when: bfd_sessions.json.data is defined and bfd_sessions.json.data | length > 0
      
    - name: Identify unhealthy connections
      set_fact:
        down_control_list: "{{ control_connections.json.data | selectattr('state', 'equalto', 'down') | list }}"
        down_bfd_list: "{{ bfd_sessions.json.data | selectattr('state', 'equalto', 'down') | list }}"
      when: 
        - control_connections.json.data is defined
        - bfd_sessions.json.data is defined
        
    - name: Display unhealthy control connections
      debug:
        msg: "DOWN Control Connection: {{ item['system-ip'] | default('Unknown') }} to {{ item['peer-type'] | default('Unknown') }}"
      loop: "{{ down_control_list }}"
      when: down_control_list is defined and down_control_list | length > 0
      
    - name: Display unhealthy BFD sessions
      debug:
        msg: "DOWN BFD Session: {{ item['system-ip'] | default('Unknown') }} -> {{ item['peer-ip'] | default('Unknown') }}"
      loop: "{{ down_bfd_list }}"
      when: down_bfd_list is defined and down_bfd_list | length > 0
      
    - name: Calculate overall fabric health score
      set_fact:
        fabric_health_score: "{{ (((up_control_connections | default(0) | int) + (up_bfd_sessions | default(0) | int) + (established_omp_peers | default(0) | int)) * 100 / ((total_control_connections | default(1) | int) + (total_bfd_sessions | default(1) | int) + (total_omp_peers | default(1) | int))) | round(1) }}"
        
    - name: Display fabric health summary
      debug:
        msg: |
          ====================================
          CATALYST WAN FABRIC HEALTH SUMMARY
          ====================================
          Overall Health Score: {{ fabric_health_score }}%
          
          Control Plane: {{ up_control_connections | default(0) }}/{{ total_control_connections | default(0) }} UP
          BFD Sessions: {{ up_bfd_sessions | default(0) }}/{{ total_bfd_sessions | default(0) }} UP  
          OMP Peers: {{ established_omp_peers | default(0) }}/{{ total_omp_peers | default(0) }} UP
          
          Status: {{ 'HEALTHY' if (fabric_health_score | float) > 95 else 'WARNING' if (fabric_health_score | float) > 80 else 'CRITICAL' }}
          
    - name: Create fabric health report
      copy:
        content: |
          Catalyst WAN Fabric Health Report
          Generated: {{ ansible_date_time.iso8601 | default('Unknown time') }}
          vManage: {{ vmanage_host }}
          
          ====================================
          OVERALL FABRIC HEALTH: {{ fabric_health_score }}%
          ====================================
          
          CONTROL PLANE HEALTH
          --------------------
          Total Connections: {{ total_control_connections | default('N/A') }}
          UP: {{ up_control_connections | default('N/A') }}
          DOWN: {{ down_control_connections | default('N/A') }}
          Success Rate: {{ ((up_control_connections | default(0) | int) * 100 / (total_control_connections | default(1) | int)) | round(1) }}%
          
          BFD SESSION HEALTH  
          ------------------
          Total Sessions: {{ total_bfd_sessions | default('N/A') }}
          UP: {{ up_bfd_sessions | default('N/A') }}
          DOWN: {{ down_bfd_sessions | default('N/A') }}
          Success Rate: {{ ((up_bfd_sessions | default(0) | int) * 100 / (total_bfd_sessions | default(1) | int)) | round(1) }}%
          
          OMP PEER HEALTH
          ---------------
          Total Peers: {{ total_omp_peers | default('N/A') }}
          Established: {{ established_omp_peers | default('N/A') }}
          Success Rate: {{ ((established_omp_peers | default(0) | int) * 100 / (total_omp_peers | default(1) | int)) | round(1) }}%
          
          {% if down_control_list is defined and down_control_list | length > 0 %}
          FAILED CONTROL CONNECTIONS
          --------------------------
          {% for conn in down_control_list %}
          - {{ conn['system-ip'] | default('Unknown') }} -> {{ conn['peer-type'] | default('Unknown') }}
          {% endfor %}
          {% endif %}
          
          {% if down_bfd_list is defined and down_bfd_list | length > 0 %}
          FAILED BFD SESSIONS
          -------------------
          {% for session in down_bfd_list %}
          - {{ session['system-ip'] | default('Unknown') }} -> {{ session['peer-ip'] | default('Unknown') }}
          {% endfor %}
          {% endif %}
          
          RECOMMENDATIONS
          ---------------
          {% if fabric_health_score | float < 95 %}
          - Investigate failed connections and sessions
          - Check network connectivity between sites
          - Verify device configurations and certificates
          {% else %}
          - Fabric health is optimal
          - Continue regular monitoring
          {% endif %}
        dest: "./SDWAN-fabric-health-{{ ansible_date_time.epoch | default('timestamp') }}.txt"
      delegate_to: localhost
      
    - name: Display report location
      debug:
        msg: "Fabric health report saved to: ./SDWAN-fabric-health-{{ ansible_date_time.epoch | default('timestamp') }}.txt"